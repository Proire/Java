1)create a customer class with following attributes
	custid
	custname
	address
	age
create one instance of it and store it in a file. (Serialization).
now open a file, read the object and read its contents . (Deserialization)
sol:-
import java.io.*;
public class Customer implements Serializable
{
	int custid;
	String custname;
	String address;
	int age;
	Customer(int custid, String custname, String address, int age)
	{
		this.custid = custid;
		this.custname = custname;
		this.address = address;
		this.age = age;
	}
	public static void main(String args[])
	{
		try
		{
			FileOutputStream fos = new FileOutputStream("C:\\Users\\admin\\Desktop\\private\\Day_12\\Day_12\\File_Handling_1\\c.txt");
			ObjectOutputStream oos = new ObjectOutputStream(fos);
			oos.writeObject(new Customer(20,"KL Rahul","Bandra",32));
			fos.close();
			oos.close();
		}
		catch(Exception ie)
		{}
		try
		{
			FileInputStream fis = new FileInputStream("C:\\Users\\admin\\Desktop\\private\\Day_12\\Day_12\\File_Handling_1\\c.txt");
			ObjectInputStream ois = new ObjectInputStream(fis);
			Customer customer = (Customer)ois.readObject();
			System.out.println(customer.custid+"\t"+customer.custname+"\t"+customer.address+"\t"+customer.age);
			fis.close();
			ois.close();
		}
		catch(Exception ie)
		{}
	}
}		


2) Person class implements Serializable with
	private String name
	private int age

		getters and setters
		parameterized constructor

Student extends Person
	private int rollno
		getter and setters
		parameterized constructor accepting name,age and rollno
			pass name and age to the super constructor


Demo class with main
	create one object of Student, write it inside file and then read.
sol:
import java.io.*;
class Person implements Serializable
{
	private String name;
	private int age;
	Person(String name, int age)
	{
		this.name = name;
		this.age = age;
	}
	public String getname()
	{
		return name;
	}
	public int getage()
	{
		return age;
	}
	public void setname(String name)
	{
		this.name = name;
	}
	public void setage(int age)
	{
		this.age = age;
	}
}
class Student extends Person
{
	private int rollno;
	Student(String name, int age, int rollno)
	{
		super(name,age);
		this.rollno = rollno;
	}
	public int getrollno()
	{
		return rollno;
	}
	public void setrollno(int rollno)
	{
		this.rollno = rollno;
	}
}
public class Demo
{
	public static void main(String args[])
	{
		try
		{
			FileOutputStream fos = new FileOutputStream("C:\\Users\\admin\\Desktop\\private\\Day_12\\Day_12\\File_Handling_1\\c.txt");
			ObjectOutputStream oos = new ObjectOutputStream(fos);
			oos.writeObject(new Student("AB Deviliers",37,1));
			fos.close();
			oos.close();
		}
		catch(Exception ie)
		{}
		try
		{
			FileInputStream fis = new FileInputStream("C:\\Users\\admin\\Desktop\\private\\Day_12\\Day_12\\File_Handling_1\\c.txt");
			ObjectInputStream ois = new ObjectInputStream(fis);
			Student student = (Student)ois.readObject();
			System.out.println(student.getrollno()+"\t"+student.getage()+"\t"+student.getname());
			fis.close();
			ois.close();
		}
		catch(Exception ie)
		{}
	}
}
3) Define a class "Student" with
	private int rollno and private String name and private int age;
	setters and getters

	create 2 objects of Student and write them inside filesystem and thereafter read both the objects and display.
sol:
import java.io.*;
class Student implements Serializable
{
	private int rollno = 1;
	private String name = "priore";
	private int age = 17;
	int getrollno()
	{
		return rollno;
	}
	String getname()
	{
		return name;
	}
	int getage()
	{
		return age;
	}
	void setrollno(int rollno)
	{
		this.rollno = rollno;
	}
	void setname(String name)
	{
		this.name = name;
	}
	void setage(int age)
	{	
		this.age= age;
	}
	public static void main(String args[])
	{
		try
		{
			FileOutputStream fos = new FileOutputStream("C:\\Users\\admin\\Desktop\\private\\Day_12\\Day_12\\File_Handling_1\\c.txt");
			ObjectOutputStream oos = new ObjectOutputStream(fos);
			Student student1 = new Student();
			student1.setage(17);
			student1.setname("priore");
			student1.setrollno(4);
			oos.writeObject(student1);
			Student student3 = new Student();
			student3.setage(23);
			student3.setname("sadah");
			student3.setrollno(5);
			oos.writeObject(student3);
			fos.close();
			oos.close();
		}
		catch(Exception ie)
		{}
		try 
		{
			FileInputStream fis = new FileInputStream("C:\\Users\\admin\\Desktop\\private\\Day_12\\Day_12\\File_Handling_1\\c.txt");
			ObjectInputStream ois = new ObjectInputStream(fis);
			Student student2 = (Student)ois.readObject();
			Student student4 = (Student)ois.readObject();
			System.out.println(student2.getname()+"\t"+student2.getage()+"\t"+student2.getrollno());
			System.out.println(student4.getname()+"\t"+student4.getage()+"\t"+student4.getrollno());
			fis.close();
			ois.close();
		}
		catch(Exception ie)
		{}
	}
}

4) create two classes
	Engine
		private int speed
		private String type
			setters and getters

	Car
		private Engine engine;
		private String modelname;
			setters and getters

define class "Demo" with main
	inside main create object of Car and then pass Engine to its setEngine method.
	now serialize this object of Car and deserialize it.

sol:
import java.io.*;
class Engine implements Serializable
{
	private int speed;
	private String type;
	void setspeed(int speed)
	{
		this.speed = speed;
	}
	void settype(String type)
	{
		this.type = type;
	}
	int getspeed()
	{
		return speed;
	}
	String gettype()
	{
		return type;
	}
}
class Car implements Serializable
{
	private Engine engine;
	private String modelname;
	void setengine(Engine engine)
	{
		this.engine = engine;
	}
	void setmodelname(String modelname)
	{
		this.modelname = modelname;
	}
	Engine getengine()
	{
		return engine;
	}
	String getmodelname()
	{
		return modelname;
	}
}
public class Demo
{	
	public static void main(String args[])
	{
		
		try
		{
			FileOutputStream fos = new FileOutputStream("C:\\Users\\admin\\Desktop\\private\\Day_12\\Day_12\\File_Handling_1\\c.txt");
			ObjectOutputStream oos = new ObjectOutputStream(fos);
			Car car = new Car();
			Engine engine = new Engine();
			engine.settype("V Engine");
			engine.setspeed(420);
			car.setengine(engine);
			car.setmodelname("Lamborghini urus");
			oos.writeObject(car);
			fos.close();
			oos.close();
		}
		catch(Exception ie)
		{}
		try 
		{
			FileInputStream fis = new FileInputStream("C:\\Users\\admin\\Desktop\\private\\Day_12\\Day_12\\File_Handling_1\\c.txt");
			ObjectInputStream ois = new ObjectInputStream(fis);
			Car car = (Car) ois.readObject();
			System.out.println(car.getmodelname()+"\t"+car.getengine().gettype()+"\t"+car.getengine().getspeed());
			fis.close();
			ois.close();
		}
		catch(Exception ie)
		{}
	}
}

